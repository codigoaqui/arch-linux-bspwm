Historia

Muchos eventos llevaron a la creación del primer kernel de Linux y, en última instancia, al sistema operativo (OS) Linux, 
comenzando con el lanzamiento del sistema operativo Unix por parte de Ken Thompson y Dennis Ritchie (quienes trabajaban 
para AT&T en ese momento) en 1970. El Berkeley Software Distribution (BSD) se lanzó en 1977, pero como contenía el código
Unix propiedad de AT&T, una demanda resultante limitó el desarrollo de BSD. Richard Stallman inició el proyecto GNU en 1983.
Su objetivo era crear un sistema operativo libre similar a Unix, y parte de su trabajo resultó en la creación de la 
Licencia Pública General GNU (GPL). Los proyectos de otros a lo largo de los años no lograron dar como resultado un kernel
libre y funcional que sería ampliamente adoptado hasta la creación del kernel de Linux.

Al principio, Linux fue un proyecto personal iniciado en 1991 por un estudiante finlandés llamado Linus Torvalds. Su objetivo
era crear un kernel de sistema operativo nuevo y gratuito. A lo largo de los años, el kernel de Linux ha pasado de una pequeña
cantidad de archivos escritos en C bajo licencia que prohibía la distribución comercial a la última versión con más de 23 millones
de líneas de código fuente (comentarios excluidos), con licencia GNU General Public License v2.

Linux está disponible en más de 600 distribuciones (o un sistema operativo basado en el kernel de Linux y software y bibliotecas 
compatibles). Algunos de los más populares y conocidos son Ubuntu, Debian, Fedora, OpenSUSE, Elementary, Manjaro, Gentoo Linux, RedHat y Linux Mint.

Linux generalmente se considera más seguro que otros sistemas operativos, y aunque ha tenido muchas vulnerabilidades de kernel en el pasado, 
cada vez es menos frecuente. Es menos susceptible al malware que los sistemas operativos Windows y se actualiza con mucha frecuencia.
Linux también es muy estable y, en general, ofrece un rendimiento muy alto para el usuario final. Sin embargo, puede ser más difícil
para los principiantes y no tiene tantos controladores de hardware como Windows.

Dado que Linux es gratuito y de código abierto, cualquier persona puede modificar y distribuir el código fuente con o sin fines comerciales.
Los sistemas operativos basados en Linux se ejecutan en servidores, mainframes, computadoras de escritorio, sistemas integrados como enrutadores,
televisores, consolas de videojuegos y más. El sistema operativo general de Android que se ejecuta en teléfonos inteligentes y 
tabletas se basa en el kernel de Linux y, debido a esto, Linux es el sistema operativo más instalado.

Linux es un sistema operativo como Windows, iOS, Android o macOS. Un sistema operativo es un software que administra todos los
recursos de hardware asociados con nuestra computadora. Eso significa que un sistema operativo gestiona toda la comunicación 
entre el software y el hardware. Además, existen muchas distribuciones diferentes (distro). Es como una versión de los sistemas 
operativos Windows.

Con las instancias interactivas, tenemos acceso a Pwnbox, una versión personalizada de Parrot OS. Este será el sistema operativo 
principal con el que trabajaremos a través de los módulos. Parrot OS es una distribución de Linux basada en Debian que se centra
en la seguridad, la privacidad y el desarrollo.


Filosofía

Linux sigue cinco principios básicos:

 __________________________________________________________________________________________________________
|              Principio                   |                           Descripcion                         |
|__________________________________________|_______________________________________________________________|
|Todo es un archivo                        |Todos los archivos de configuración para los diversos servicios|
|                                          |que se ejecutan en el sistema operativo Linux se almacenan en  |
|                                          |uno o más archivos de texto.                                   |
|__________________________________________|_______________________________________________________________|
|Pequeños programas de un solo propósito   |Linux ofrece muchas herramientas diferentes con las que        |
|                                          |trabajaremos, que se pueden combinar para trabajar juntas.     |
|__________________________________________|_______________________________________________________________|
|Capacidad de encadenar programas para     |La integración y combinación de diferentes herramientas nos    |
|realizar tareas complejas                 |permite llevar a cabo muchas tareas grandes y complejas,       |
|                                          |como procesar o filtrar resultados de datos específicos.       |
|                                          |                                                               |
|__________________________________________|_______________________________________________________________|
|Evite las interfaces de usuario cautivas  |Linux está diseñado para funcionar principalmente con el shell |
|                                          |(o terminal), lo que le da al usuario un mayor control sobre   |
|                                          |el sistema operativo.                                          |
|__________________________________________|_______________________________________________________________|
|Datos de configuración almacenados en     |Un ejemplo de dicho archivo es el archivo /etc/passwd, que     |
|un archivo de texto                       |almacena todos los usuarios registrados en el sistema.         |
|__________________________________________|_______________________________________________________________|


Componentes
 __________________________________________________________________________________________________________
|              Componente                  |                       Descripcion                             |
|__________________________________________|_______________________________________________________________|
|Bootloader                                |Un fragmento de código que se ejecuta para guiar el proceso de |
|                                          |arranque para iniciar el sistema operativo.                    | 
|                                          |Parrot Linux utiliza el cargador de arranque GRUB.             |
|__________________________________________|_______________________________________________________________|
|Kernel del sistema operativo              |El kernel es el componente principal de un sistema operativo.  |
|                                          |Administra los recursos para los dispositivos de E/S del       |
|                                          |sistema a nivel de hardware.                                   |
|__________________________________________|_______________________________________________________________|
|Demonios                                  |Los servicios en segundo plano se denominan "demonios"         |
|                                          |en Linux. Su propósito es garantizar que las funciones clave,  |
|                                          |como la programación, la impresión y la multimedia, funcionen  |
|                                          |correctamente. Estos pequeños programas se cargan después de   |
|                                          |que iniciamos o iniciamos sesión en la computadora.            |
|__________________________________________|_______________________________________________________________|
|OS Shell                                  |El shell del sistema operativo o el intérprete de lenguaje de  |
|                                          |comandos (también conocido como la línea de comandos) es la    |
|                                          |interfaz entre el sistema operativo y el usuario.              |
|                                          ||Esta interfaz permite al usuario decirle al sistema operativo |
|                                          |qué hacer. Los shells más utilizados son                       |
|                                          |Bash, Tcsh/Csh, Ksh, Zsh y Fish.                               |
|__________________________________________|_______________________________________________________________|
|Servidor de gráficos                      |Proporciona un subsistema gráfico (servidor) llamado "X" o     |
|                                          |"X-server" que permite que los programas gráficos se ejecuten  |
|                                          |de forma local o remota en el sistema de ventanas X.           |
|__________________________________________|_______________________________________________________________|
|Administrador de ventanas                 |También conocido como interfaz gráfica de usuario (GUI). Hay   |
|                                          |muchas opciones, incluidas GNOME, KDE, MATE, Unity y Cinnamon. |
|                                          |Un entorno de escritorio suele tener varias aplicaciones,      |
|                                          |incluidos navegadores web y de archivos. Estos permiten al     |
|                                          |usuario acceder administrar las funciones y servicios          |
|                                          |esenciales y de acceso frecuente de un sistema operativo.      |
|__________________________________________|_______________________________________________________________|
|Utilidades                                |Las aplicaciones o utilidades son programas que realizan       |
|                                          |funciones particulares para el usuario o para otro programa.   |
|__________________________________________|_______________________________________________________________|


Introducción a Shell

Es crucial aprender a usar el shell de Linux, ya que hay muchos servidores basados en Linux. Estos se usan
a menudo porque Linux es menos propenso a errores en comparación con los servidores de Windows. Por ejemplo,
los servidores web suelen estar basados en Linux. Saber usar el sistema operativo para controlarlo de manera 
efectiva requiere comprender y dominar la parte esencial de Linux, el Shell. Cuando cambiamos por primera vez
de Windows a Linux, ¿se ve así?

Un terminal de Linux, también llamado shell o línea de comandos, proporciona una interfaz de entrada/salida 
(E/S) basada en texto entre los usuarios y el kernel para un sistema informático. El término consola también 
es típico pero no se refiere a una ventana sino a una pantalla en modo texto. En la ventana de terminal, 
se pueden ejecutar comandos para controlar el sistema.


Emuladores de terminales

Los emuladores de terminal se utilizan a menudo para esto. La emulación de terminal es un software que emula 
la función de un terminal. Permite el uso de programas basados en texto dentro de una interfaz gráfica de usuario 
(GUI). Existen muchos emuladores de terminal diferentes, como GNOME Terminal, XFCE4 Terminal, XTerm y muchos otros. 
También existen las llamadas interfaces de línea de comandos que se ejecutan como terminales adicionales en 
un terminal y, por lo tanto, son multiplexores. Estos multiplexores incluyen Tmux, GNU Screen y otros. En resumen, 
una terminal sirve como interfaz para el intérprete de shell.

Los emuladores de terminal y los multiplexores son extensiones beneficiosas para la terminal. Nos brindan 
diferentes métodos y funciones para trabajar con la terminal, como dividir la terminal en una ventana, trabajar 
en múltiples directorios, crear diferentes espacios de trabajo y mucho más.


Shell

El shell más utilizado en Linux es Bourne-Again Shell (BASH) y forma parte del proyecto GNU. Todo lo que 
hacemos a través de la GUI lo podemos hacer con el shell. El shell nos brinda muchas más posibilidades de 
interactuar con programas y procesos para obtener información más rápido. Además, muchos procesos se pueden 
automatizar fácilmente con scripts más pequeños o más grandes que facilitan mucho el trabajo manual.

Además de Bash, también existen otros shells como Tcsh/Csh, Ksh, Zsh, Fish shell y otros.
